<% if params[:query].present? %>
  <h2><%= title 'Search Result for ' + params[:query].titleize %></h2>
<% end %>

<div id="controls" class="row">
  <div class="page_container" class="col-md-6" style="float:left;">
    <%= will_paginate @presenter.all unless @presenter.all.nil? %>
  </div>

  <div id="form_container" class="col-md-6" style="float:left; position: relative;">
    <%= form_tag pins_path, :method => 'get', :class => 'scope_dropdown', remote: true do %>
      <%= select_tag :scope, grouped_options_for_select(@presenter.scopes), {multiple: true, size: 5} %>
      <%= select_tag :surgeon, options_from_collection_for_select(Surgeon.all, "id", "last_name"), {multiple: true, size: 5} %>
      <%= select_tag :procedure, options_from_collection_for_select(Procedure.all, "id", "name"), {multiple: true, size: 5} %>
      <%= submit_tag "Filter", class: 'btn dropdown-toggle sr-only' %>
    <% end %>
  </div>
</div>

<br clear="both" />
<% title 'Recent Submissions' unless params[:query].present? %>
  <div id="pins" class="js-masonry" data-masonry-options='{ "columnWidth": 200, "itemSelector": ".box" }'>

    <div id="pin_container">
      <%= render @presenter.all %>
    </div>

  </div>

  <br>
  <br clear="both" />

  <div class="page_container" class="col-md-6">
    <%= will_paginate @presenter.all unless @presenter.all.nil? %>
  </div>

<script>
  $("#scope").multiselect({
     position: {
        my: 'bottom',
        at: 'center'

       // only include the "of" property if you want to position
       // the menu against an element other than the button.
       // multiselect automatically sets "of" unless you explictly
       // pass in a value.
     }
  });
</script>